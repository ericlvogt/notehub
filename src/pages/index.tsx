import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";
import { useState } from "react";

const Home: NextPage = () => {
  // const no = api.example.hello.useQuery({ text: "from tRPC" });
  let notes = api.note.getAll.useQuery();
  const mutation = api.note.create.useMutation();

  const [name, setName] = useState("");
  const [path, setPath] = useState("");
  const [creator, setCreator] = useState("");

  const handleSubmit = () => {
    mutation.mutate({name, creator, path});
    notes = api.note.getAll.useQuery();
    console.log(notes);
  };

  return (
    <>
      <Head>
        <title>NoteHub</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            NoteHub
          </h1>
          <form onSubmit={handleSubmit} className="flex-col">
            <label className="block my-2 text-cyan-50">
              Name:
              <input className="border rounded p-2 w-full text-black" type="text" value={name} onChange={(e) => setName(e.target.value)}/>
            </label>
            <label className="block my-2 text-cyan-50">
              Path:
              <input className="border rounded p-2 w-full text-black" type="text" value={path} onChange={(e) => setPath(e.target.value)}/>
            </label>
            <label className="block my-2 text-cyan-50">
              Creator:
              <input className="border rounded p-2 w-full text-black" type="text" value={creator} onChange={(e) => setCreator(e.target.value)}/>
            </label>
            <input className="bg-blue-500 text-white rounded p-2 my-2" type="submit" value="Submit"/>
          </form>
          <div className="w-full">
          <table className="border-collapse border rounded-lg shadow-md bg-white table-auto">
            <thead>
              <tr className="bg-gray-200 font-medium text-gray-800 border-b border-gray-300">
                <th className="px-4 py-2 text-left">Id</th>
                <th className="px-4 py-2 text-left">Note</th>
                <th className="px-4 py-2 text-left">Path</th>
                <th className="px-4 py-2 text-left">Creator</th>
              </tr>
            </thead>
            <tbody>
              {
                notes.data?.map((note) => 
                <tr key={note.id} className="bg-white hover:bg-gray-100">
                  <td className="border px-4 py-2 text-sm text-gray-600">{note.id}</td>
                  <td className="border px-4 py-2 text-sm text-gray-600">{note.name}</td>
                  <td className="border px-4 py-2 text-sm text-gray-600">{note.path}</td>
                  <td className="border px-4 py-2 text-sm text-gray-600">{note.creator}</td>
                </tr>
                )
              }
            </tbody>
          </table>

          </div>
          {/* <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">First Steps →</h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation →</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div> */}
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
